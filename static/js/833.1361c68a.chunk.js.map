{"version":3,"file":"static/js/833.1361c68a.chunk.js","mappings":"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","sources":["components/FilmDetailsNavigation/FilmDetailsNavigation.styled.jsx","components/FilmDetailsNavigation/FilmDetailsNavigation.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/API.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LinksWrapper = styled.div`\n  margin-bottom: 12px;\n  margin-top: 16px;\n`;\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 18px;\n  color: #063970;\n  margin-right: 12px;\n\n  &.active,\n  :hover {\n    text-decoration: underline;\n  }\n`;\nexport { Link, LinksWrapper };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link, LinksWrapper } from './FilmDetailsNavigation.styled';\n\nconst FilmDetailsNavigation = ({ id }) => {\n  const location = useLocation();\n\n  return (\n    <LinksWrapper>\n      <Link to={`/movies/${id}/cast`} state={{ from: location?.state?.from }}>\n        Cast\n      </Link>\n\n      <Link\n        to={`/movies/${id}/reviews`}\n        state={{ from: location?.state?.from }}\n      >\n        Reviews\n      </Link>\n    </LinksWrapper>\n  );\n};\n\nexport default FilmDetailsNavigation;\n\nFilmDetailsNavigation.propTypes = {\n  id: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst FilmWrapper = styled.div`\n  display: flex;\n`;\nconst FilmImage = styled.img`\n  display: block;\n  width: 320px;\n  height: auto;\n  object-fit: cover;\n`;\n\nconst GoBackButton = styled.button`\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 18px;\n  color: #063970;\n  margin-bottom: 12px;\n  background-color: transparent;\n  border: 0;\n  border-bottom: 1px solid #063970;\n`;\n\nconst FilmInfoWrapper = styled.div`\n  margin-left: 20px;\n  margin-right: auto;\n  padding: 20px;\n`;\n\nexport { FilmWrapper, FilmImage, FilmInfoWrapper, GoBackButton };\n","import FilmDetailsNavigation from 'components/FilmDetailsNavigation/FilmDetailsNavigation';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { getFilmById } from 'services/API';\nimport {\n  FilmWrapper,\n  FilmImage,\n  FilmInfoWrapper,\n  GoBackButton,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    getFilmById(movieId)\n      .then(setFilm)\n      .catch(error => {\n        console.log(error);\n        navigate('/');\n      });\n  }, [movieId, navigate]);\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {film && (\n        <>\n          <GoBackButton onClick={onGoBack} type=\"button\">\n            Go Back\n          </GoBackButton>\n          <FilmWrapper>\n            <FilmImage\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n                  : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n              }\n              alt={film.original_title || film.title}\n            />\n            <FilmInfoWrapper>\n              <h1>\n                {film.original_title || film.title} (\n                {film.release_date.slice(0, 4)})\n              </h1>\n              <h2>Overwiew</h2>\n              <p>{film.overview}</p>\n              <h2>Genres</h2>\n              <p>{film.genres.map(genre => `${genre.name} `)}</p>\n            </FilmInfoWrapper>\n          </FilmWrapper>\n\n          <FilmDetailsNavigation id={movieId} />\n\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","const APIkey = 'adc407dcb2a6c0a42279d4aedc8d3de0';\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrending(page) {\n  const response = await axios.get(\n    `trending/all/week?api_key=${APIkey}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmsByQuery(query, page) {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIkey}&query=${query}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${APIkey}`);\n  return response.data;\n}\n"],"names":["LinksWrapper","styled","Link","NavLink","id","location","useLocation","to","state","from","FilmWrapper","FilmImage","GoBackButton","FilmInfoWrapper","useState","film","setFilm","movieId","useParams","navigate","useNavigate","useEffect","getFilmById","then","catch","error","console","log","onClick","type","src","poster_path","alt","original_title","title","release_date","slice","overview","genres","map","genre","name","APIkey","axios","require","getTrending","page","get","response","data","getFilmsByQuery","query","getCast","getReviews","defaults","baseURL"],"sourceRoot":""}