{"version":3,"file":"static/js/35.cecf97d7.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","pages/HomePage/HomePage.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst FilmGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  gap: 30px;\n  margin: 0px auto;\n  padding: 15px 0px 0px;\n  list-style: none;\n`;\nconst FilmGalleryItem = styled.li`\n  box-shadow: rgb(12 0 90 / 35%) 0px 5px 15px;\n  transition: all 0.2s ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\nconst FilmTitle = styled.h2`\n  font-size: 16px;\n  margin-left: 12px;\n`;\nconst FilmInfo = styled.p`\n  margin-left: 12px;\n  margin-top: 0px;\n  font-size: 14px;\n  color: #063970;\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\nconst FilmImage = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nconst FilmLink = styled(Link)`\n  text-decoration: none;\n  &:visited {\n    color: inherit;\n  }\n`;\n\nconst LoadMoreButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #063970;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  margin: 20px;\n  color: white;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover {\n    color: #063970;\n    background-color: white;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  margin-left: auto;\n  margin-left: auto;\n  display: flex;\n  justify-content: center;\n`;\nexport {\n  FilmGallery,\n  FilmImage,\n  FilmGalleryItem,\n  FilmTitle,\n  FilmInfo,\n  LoadMoreButton,\n  ButtonsWrapper,\n  FilmLink,\n};\n","import PropTypes from 'prop-types';\nimport {\n  FilmGallery,\n  FilmGalleryItem,\n  FilmImage,\n  FilmTitle,\n  FilmInfo,\n  LoadMoreButton,\n  ButtonsWrapper,\n  FilmLink,\n} from './Gallery.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst Gallery = ({ handleGoBack, handleLoadMore, page, films }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <FilmGallery>\n        {films.map(film => (\n          <FilmGalleryItem key={film.id} id={film.id}>\n            <FilmLink\n              to={\n                location.pathname === '/' ? `movies/${film.id}` : `${film.id}`\n              }\n              state={{\n                from: location,\n              }}\n            >\n              <FilmImage\n                src={\n                  film.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n                }\n                alt={film.title || film.name}\n              />\n              <FilmTitle>{film.title || film.name}</FilmTitle>\n\n              <FilmInfo>Votes: {film.vote_count}</FilmInfo>\n              <FilmInfo>Vote average: {film.vote_average}</FilmInfo>\n            </FilmLink>\n          </FilmGalleryItem>\n        ))}\n      </FilmGallery>\n\n      <ButtonsWrapper>\n        {page >= 2 && (\n          <LoadMoreButton onClick={handleGoBack}>Previous page</LoadMoreButton>\n        )}\n        {films.length === 20 && (\n          <LoadMoreButton onClick={handleLoadMore}>Next page</LoadMoreButton>\n        )}\n      </ButtonsWrapper>\n    </>\n  );\n};\n\nexport default Gallery;\n\nGallery.propTypes = {\n  handleGoBack: PropTypes.func,\n  handleLoadMore: PropTypes.func,\n  page: PropTypes.number,\n  films: PropTypes.array,\n};\n","import { useEffect, useState } from 'react';\nimport { getTrending } from 'services/API';\nimport Gallery from '../../components/Gallery';\nimport * as Scroll from 'react-scroll';\nimport { useSearchParams } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [films, setFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const currentPage = searchParams.get('page') ?? 1;\n\n  useEffect(() => {\n    getTrending(currentPage)\n      .then(response => setFilms(response.results))\n      .catch(error => console.log(error));\n  }, [currentPage]);\n\n  const onLoadMore = () => {\n    setSearchParams({\n      page: Number(currentPage) + 1,\n    });\n\n    Scroll.animateScroll.scrollToTop();\n  };\n\n  const onGoBack = () => {\n    setSearchParams({\n      page: Number(currentPage) - 1,\n    });\n\n    Scroll.animateScroll.scrollToTop();\n  };\n\n  return (\n    <>\n      {films && (\n        <Gallery\n          handleGoBack={onGoBack}\n          handleLoadMore={onLoadMore}\n          page={Number(currentPage)}\n          films={films}\n        />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","const APIkey = 'adc407dcb2a6c0a42279d4aedc8d3de0';\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrending(page) {\n  const response = await axios.get(\n    `trending/all/week?api_key=${APIkey}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmsByQuery(query, page) {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIkey}&query=${query}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${APIkey}`);\n  return response.data;\n}\n"],"names":["FilmGallery","styled","FilmGalleryItem","FilmTitle","FilmInfo","FilmImage","FilmLink","Link","LoadMoreButton","ButtonsWrapper","handleGoBack","handleLoadMore","page","films","location","useLocation","map","film","id","to","pathname","state","from","src","poster_path","alt","title","name","vote_count","vote_average","onClick","length","useState","setFilms","useSearchParams","searchParams","setSearchParams","currentPage","get","useEffect","getTrending","then","response","results","catch","error","console","log","Gallery","Number","Scroll","APIkey","axios","require","data","getFilmsByQuery","query","getFilmById","getCast","getReviews","defaults","baseURL"],"sourceRoot":""}