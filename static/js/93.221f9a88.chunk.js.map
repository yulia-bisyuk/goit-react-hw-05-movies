{"version":3,"file":"static/js/93.221f9a88.chunk.js","mappings":"uPAEMA,EAAWC,EAAAA,GAAAA,GAAH,kDAGRC,EAAUD,EAAAA,GAAAA,IAAH,6EAKPE,EAAWF,EAAAA,GAAAA,GAAH,+C,SC8Bd,EAnCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQL,GACLM,MAAK,gBAAGR,EAAH,EAAGA,KAAH,OAAcC,EAAQD,MAC3BS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZN,EAAS,UAEZ,CAACF,EAASE,KAGX,8BACGJ,GACCA,EAAKa,KAAI,SAAAb,GAAI,OACX,UAACL,EAAD,YACE,SAACG,EAAD,UAAWE,EAAKc,QAEhB,SAACjB,EAAD,CACEkB,IACEf,EAAKgB,aAAL,0CACuChB,EAAKgB,cACxC,0EAENC,IAAKjB,EAAKc,SATCd,EAAKkB,W,uLCvBxBC,EAAS,mCAETC,EAAQC,EAAAA,MAAAA,QAGP,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBH,EAAMI,IAAN,oCACQL,EADR,iBACuBI,IAFzC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAOL,GAAtC,uFACkBH,EAAMI,IAAN,gCACIL,EADJ,kBACoBS,EADpB,iBACkCL,IAFpD,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BX,GAA3B,uFACkBE,EAAMI,IAAN,iBAAoBN,EAApB,oBAAkCC,IADpD,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBW,GAAvB,uFACkBE,EAAMI,IAAN,iBAAoBN,EAApB,4BAA0CC,IAD5D,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BZ,GAA1B,uFACkBE,EAAMI,IAAN,iBAAoBN,EAApB,4BAA0CC,IAD5D,cACCM,EADD,yBAEEA,EAASC,MAFX,kEA1BPN,EAAMW,SAASC,QAAU","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastItem = styled.li`\n  list-style-type: none;\n`;\nconst CastImg = styled.img`\n  display: block;\n  width: 180px;\n  height: auto;\n`;\nconst CastName = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport { CastItem, CastImg, CastName };\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getCast } from '../../services/API';\nimport { CastItem, CastImg, CastName } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(({ cast }) => setCast(cast))\n      .catch(error => {\n        console.log(error);\n        navigate('/');\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      {cast &&\n        cast.map(cast => (\n          <CastItem key={cast.id}>\n            <CastName>{cast.name}</CastName>\n\n            <CastImg\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                  : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n              }\n              alt={cast.name}\n            />\n          </CastItem>\n        ))}\n    </>\n  );\n};\n\nexport default Cast;\n","const APIkey = 'adc407dcb2a6c0a42279d4aedc8d3de0';\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrending(page) {\n  const response = await axios.get(\n    `trending/all/week?api_key=${APIkey}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmsByQuery(query, page) {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIkey}&query=${query}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getFilmById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${APIkey}`);\n  return response.data;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${APIkey}`);\n  return response.data;\n}\n"],"names":["CastItem","styled","CastImg","CastName","useState","cast","setCast","movieId","useParams","navigate","useNavigate","useEffect","getCast","then","catch","error","console","log","map","name","src","profile_path","alt","id","APIkey","axios","require","getTrending","page","get","response","data","getFilmsByQuery","query","getFilmById","getReviews","defaults","baseURL"],"sourceRoot":""}